$vertColor: red;
$vertWidth: 1px;
$vertStyle: solid;
$hrzColor: red;
$hrzWidth: 1px;
$hrzStyle: dotted;
$commonWrap: nowrap;
$vertPosition: -13px; // SETTING 1 OF 4 NEEDS TO CHANGE TOGETHER. vertical node connector line left position
$elPosition: -35px; // SETTING 2 OF 4 NEEDS TO CHANGE TOGETHER. node 'el' line left position
$elWidth: 35px; // SETTING 3 OF 4 NEEDS TO CHANGE TOGETHER. node 'el' line width
$nodePaddingLeft: 22px; // SETTING 4 OF 4 NEEDS TO CHANGE TOGETHER. entire node "position"
$iconSize: 25px;
$iconPaddingBottom: 5px;
$iconMarginRight: 5px;
$nodePadding: 4px;
$nodeMarginTop: 4px;
$nodeColor: green;
$storyPadding: 5px 0 8px 5px;
$storySize: 14px;
$storyColor: purple !important;
.mifo {
  .node-common {
    white-space: $commonWrap;
    color: $nodeColor;
    // color:pink !important;
  }

  .icon-common {
    font-size: $iconSize;
    padding-bottom: $iconPaddingBottom;
    margin-right: $iconMarginRight;
  }
  .q-tree {
    position: relative;
    color: $blue;

    &__node {
      padding: 0 0 3px $nodePaddingLeft; // this adjusts entire node position
// the following is the left vertical
      &:after {
        content: "";
        position: absolute;
        top: -4px;
        bottom: 0;
        width: 2px;
        right: auto;
        left: $vertPosition; // part of left position adjust
        border-left: $vertWidth $vertStyle $vertColor;
      }

      &:last-child:after {
        display: none;
      }

      &--disabled {
        pointer-events: none;

        .disabled {
          opacity: 1 !important;
        }

        > div,
        > i,
        > .disabled {
          opacity: 0.6 !important;

          .q-tree__node--disabled {
            > div,
            > i,
            > .disabled {
              opacity: 1 !important;
            }
          }
        }
      }
    }
// the following adjusts the vert/horiz line before a node
    &__node-header:before {
      content: "";
      position: absolute;
      top: -4px;
      bottom: 50%;
      width: $elWidth; // part of left position adjust
      left: $elPosition; // part of left position adjust
      border-left: $vertWidth $vertStyle $vertColor;
      border-bottom: $hrzWidth $hrzStyle $hrzColor;
    }
// entire child node
    &__children {
      padding-left: 25px; // part of left position adjust (for entire tree)
    }
// "story"/body nodes
    &__node-body {
      padding: $storyPadding;
      font-size: $storySize;
      color: $storyColor;
    }

    &__node--parent {
      padding-left: 2px;

      > .q-tree__node-header:before {
        width: 15px;
        left: -15px;
      }

      > .q-tree__node-collapsible > .q-tree__node-body {
        padding: 5px 0 8px 27px;
        
        &:after {
          content: "";
          position: absolute;
          top: 0;
          width: 2px;
          height: 100%;
          right: auto;
          left: 12px;
          border-left: 1px solid currentColor;
          bottom: 50px;
        }
      }
    }

    &__node--link {
      cursor: pointer;
    }
// adjust below to tighten up nodes padding and margin top was at 4px
    &__node-header {
      padding: $nodePadding;
      margin-top: $nodeMarginTop;
      border-radius: $generic-border-radius;
      outline: 0;
    }

    &__node-header-content {
      color: #000;
      transition: color 0.3s;
    }

    &__node--selected .q-tree__node-header-content {
      color: $grey;
    }

    &__icon, &__node-header-content .q-icon, &__spinner {
      font-size: 21px;
    }

    &__img {
      height: 42px;
    }

    &__avatar, &__node-header-content .q-avatar {
      font-size: 28px;
      border-radius: 50%;
      width: 28px;
      height: 28px;
    }

    &__arrow, &__spinner {
      font-size: 16px;
    }

    &__arrow {
      transition: transform 0.3s;

      &--rotate {
        transform: rotate3d(0, 0, 1, 90deg);
      }
    }

    // remove connectors before root
    > .q-tree__node {
      padding: 0;

      &:after, > .q-tree__node-header:before {
        display: none;
      }
    }

    // leave space for root empty node
    > .q-tree__node--child > .q-tree__node-header {
      padding-left: 24px;
    }

    &--dark .q-tree__node-header-content {
      color: #fff;
    }

    &--no-connectors {
      .q-tree__node:after,
      .q-tree__node-header:before,
      .q-tree__node-body:after {
        display: none !important;
      }
    }
  }

  [dir=rtl] {
    .q-tree__arrow {
      transform: rotate3d(0, 0, 1, 180deg) #{"/* rtl:ignore */"};

      &--rotate {
        transform: rotate3d(0, 0, 1, 90deg) #{"/* rtl:ignore */"};
      }
    }
  }
}